# Use the latest Jenkins LTS (Long Term Support) image
FROM jenkins/jenkins:2.401.3-jdk17

# Install AWS CLI
USER root
RUN apt-get update && \
    apt-get install -y awscli && \
    apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Docker
USER root
RUN apt-get update && \
    apt-get install -y apt-transport-https ca-certificates curl software-properties-common && \
    curl -fsSL https://download.docker.com/linux/debian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg && \
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list && \
    apt-get update && \
    apt-get install -y docker-ce && \
    apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Maven
USER root
RUN apt-get update && \
    apt-get install -y maven && \
    apt-get clean &&\
    rm -rf /var/lib/apt/lists/*

# Install Gradle
USER root
RUN apt-get update && \
    apt-get install -y unzip && \
    curl -LO https://services.gradle.org/distributions/gradle-7.1-bin.zip && \
    unzip -d /opt/gradle gradle-7.1-bin.zip && \
    ln -s /opt/gradle/gradle-7.1/bin/gradle /usr/bin/gradle && \
    rm gradle-7.1-bin.zip

# Install kubectl
USER root
RUN curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
    chmod +x kubectl && \
    mv kubectl /usr/local/bin/

# Install Sudo
USER root
RUN apt-get update \
      && apt-get install -y sudo \
      && rm -rf /var/lib/apt/lists/*

USER root
RUN apt-get update && apt-get install -y lsb-release
RUN curl -fsSLo /usr/share/keyrings/docker-archive-keyring.asc \
  https://download.docker.com/linux/debian/gpg
RUN echo "deb [arch=$(dpkg --print-architecture) \
  signed-by=/usr/share/keyrings/docker-archive-keyring.asc] \
  https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" > /etc/apt/sources.list.d/docker.list
RUN apt-get update && apt-get install -y docker-ce-cli

# Switch back to the Jenkins user
USER jenkins
RUN jenkins-plugin-cli --plugins "blueocean docker-workflow"
RUN echo "jenkins ALL=NOPASSWD: ALL" >> /etc/sudoers

# Install desired plugins (if any) by copying plugins.txt to the container
# Example: COPY plugins.txt /usr/share/jenkins/ref/plugins.txt
# RUN /usr/local/bin/install-plugins.sh < /usr/share/jenkins/ref/plugins.txt

# Expose Jenkins port (default: 8088)
EXPOSE 8088

# Run Dockerfile:
# docker run \
#    --name jenkins-blueocean \
#    --rm \
#    --detach \
#    --network jenkins \
#    --env DOCKER_HOST=unix:///var/run/docker.sock \
#    --env DOCKER_CERT_PATH=/certs/client \
#    --publish 8080:8080 \
#    --publish 50000:50000 \
#    --volume jenkins-data:/var/jenkins_home \
#    --volume jenkins-docker-certs:/certs/client:ro \
#    --volume /var/run/docker.sock:/var/run/docker.sock \
#    my-jenkins:lastest
